import{_ as a,c as s,o as n,a5 as e}from"./chunks/framework.ysm0ofoH.js";const m=JSON.parse('{"title":"Mysql8新特性","description":"","frontmatter":{},"headers":[],"relativePath":"back-end/004-mysql/011-Mysql新特性.md","filePath":"back-end/004-mysql/011-Mysql新特性.md"}'),l={name:"back-end/004-mysql/011-Mysql新特性.md"},i=e(`<h1 id="mysql8新特性" tabindex="-1">Mysql8新特性 <a class="header-anchor" href="#mysql8新特性" aria-label="Permalink to &quot;Mysql8新特性&quot;">​</a></h1><h2 id="字符集" tabindex="-1">字符集 <a class="header-anchor" href="#字符集" aria-label="Permalink to &quot;字符集&quot;">​</a></h2><ul><li><strong>默认字符集</strong> 改为 <strong>utf8mb4</strong>（之前是 latin1 → utf8）。 <ul><li>支持完整的 Unicode，包括 emoji 😊。</li></ul></li></ul><h2 id="存储引擎" tabindex="-1">存储引擎 <a class="header-anchor" href="#存储引擎" aria-label="Permalink to &quot;存储引擎&quot;">​</a></h2><ul><li><strong>系统表全部使用 InnoDB</strong><ul><li>以前是 MyISAM，8.0 全部迁移到 InnoDB，保证事务性和一致性。</li></ul></li></ul><h2 id="sql-功能增强" tabindex="-1">SQL 功能增强 <a class="header-anchor" href="#sql-功能增强" aria-label="Permalink to &quot;SQL 功能增强&quot;">​</a></h2><ul><li><p><strong>窗口函数 (Window Functions)</strong></p><ul><li>例如：<code>ROW_NUMBER()</code>, <code>RANK()</code>, <code>DENSE_RANK()</code>, <code>LEAD()</code>, <code>LAG()</code> 等。</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>SELECT name, score,</span></span>
<span class="line"><span>       RANK() OVER (PARTITION BY class_id ORDER BY score DESC) AS rank</span></span>
<span class="line"><span>FROM student;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p><strong>公用表表达式 (CTE, Common Table Expressions)</strong></p><ul><li>支持 <code>WITH</code> 递归查询。</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>WITH RECURSIVE cte AS (</span></span>
<span class="line"><span>  SELECT 1 AS n</span></span>
<span class="line"><span>  UNION ALL</span></span>
<span class="line"><span>  SELECT n+1 FROM cte WHERE n &lt; 5</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>SELECT * FROM cte;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li></ul><h2 id="数据字典" tabindex="-1">数据字典 <a class="header-anchor" href="#数据字典" aria-label="Permalink to &quot;数据字典&quot;">​</a></h2><ul><li><strong>统一的数据字典</strong><ul><li>以前元数据分散在 <code>.frm</code>、<code>.ibd</code> 文件里。</li><li>8.0 把表定义、元数据等都统一存储在 InnoDB 数据字典。</li></ul></li></ul><h2 id="json-增强" tabindex="-1">JSON 增强 <a class="header-anchor" href="#json-增强" aria-label="Permalink to &quot;JSON 增强&quot;">​</a></h2><ul><li><strong>JSON 函数更丰富</strong>：<code>JSON_TABLE()</code>, <code>-&gt;&gt;</code>, <code>JSON_ARRAYAGG()</code>, <code>JSON_OBJECTAGG()</code>。</li></ul><h2 id="安全性增强" tabindex="-1">安全性增强 <a class="header-anchor" href="#安全性增强" aria-label="Permalink to &quot;安全性增强&quot;">​</a></h2><ul><li><strong>角色 (Roles)</strong><ul><li>可以创建角色并赋予权限，简化权限管理。</li></ul></li><li><strong>更强的密码加密方式</strong>（默认 caching_sha2_password）。</li></ul><h2 id="其他改进" tabindex="-1">其他改进 <a class="header-anchor" href="#其他改进" aria-label="Permalink to &quot;其他改进&quot;">​</a></h2><ul><li><strong>隐藏索引 (Invisible Index)</strong><ul><li>可以让索引在优化器中“失效”，但不需要删除，方便调优。</li></ul></li><li><strong>持久化系统变量 (Persisted Variables)</strong><ul><li><code>SET PERSIST</code> 修改的参数会写入 <code>mysqld-auto.cnf</code>，重启后依旧生效。</li></ul></li><li><strong>原子 DDL</strong><ul><li>DDL 操作要么成功要么回滚，避免中间状态。</li></ul></li></ul>`,15),o=[i];function t(r,c,d,p,u,h){return n(),s("div",null,o)}const g=a(l,[["render",t]]);export{m as __pageData,g as default};
