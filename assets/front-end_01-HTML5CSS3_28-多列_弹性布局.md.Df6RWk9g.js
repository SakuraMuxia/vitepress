import{_ as s,c as a,o as i,a5 as n}from"./chunks/framework.ysm0ofoH.js";const E=JSON.parse('{"title":"多列布局","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/01-HTML5CSS3/28-多列&弹性布局.md","filePath":"front-end/01-HTML5CSS3/28-多列&弹性布局.md"}'),e={name:"front-end/01-HTML5CSS3/28-多列&弹性布局.md"},t=n(`<h1 id="多列布局" tabindex="-1">多列布局 <a class="header-anchor" href="#多列布局" aria-label="Permalink to &quot;多列布局&quot;">​</a></h1><p>实现类似于报纸的布局方式</p><h4 id="_1-设置给包裹元素的-css-属性-共-8-个属性" tabindex="-1">① 设置给包裹元素的 CSS 属性（共 8 个属性） <a class="header-anchor" href="#_1-设置给包裹元素的-css-属性-共-8-个属性" aria-label="Permalink to &quot;① 设置给包裹元素的 CSS 属性（共 8 个属性）&quot;">​</a></h4><table><thead><tr><th>CSS 属性名</th><th>含义</th><th>值</th></tr></thead><tbody><tr><td>column-count</td><td>列数</td><td>数字</td></tr><tr><td>column-width</td><td>列宽</td><td>长度</td></tr><tr><td>columns</td><td>同时设置列数和列宽</td><td>空格分隔两个值</td></tr><tr><td>column-gap</td><td>列间距</td><td>长度</td></tr><tr><td>column-rule-style</td><td>列分隔线风格</td><td>同 border-style</td></tr><tr><td>column-rule-color</td><td>列分隔线颜色</td><td>颜色</td></tr><tr><td>column-rule-width</td><td>列分隔线宽度</td><td>长度</td></tr><tr><td>column-rule</td><td>列分隔线复合属性</td><td>空格分隔两个值</td></tr></tbody></table><p><strong>column-count 和 column-width：</strong></p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">哪个属性分出来的列数少，就按照哪一个。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="_2-设置给子元素的-css-属性-共-4-个属性" tabindex="-1">② 设置给子元素的 CSS 属性（共 4 个属性） <a class="header-anchor" href="#_2-设置给子元素的-css-属性-共-4-个属性" aria-label="Permalink to &quot;② 设置给子元素的 CSS 属性（共 4 个属性）&quot;">​</a></h4><table><thead><tr><th>CSS 属性名</th><th>含义</th><th>值</th></tr></thead><tbody><tr><td>column-span</td><td>跨列</td><td>none：不跨列，默认值。<br>all：跨所有列</td></tr><tr><td>-webkit-column-break-before（了解）</td><td>设置元素前面是否断列</td><td>auto：自动，默认值。<br>always：必须断列。<br>avoid：必须不断列。</td></tr><tr><td>-webkit-column-break-after（了解）</td><td>设置元素后面是否断列</td><td>auto：自动，默认值。<br>always：必须断列。<br>avoid：必须不断列。</td></tr><tr><td>-webkit-column-break-inside（了解）</td><td>设置元素内部是否断列</td><td>auto：自动，默认值。<br>avoid：必须不断列。</td></tr></tbody></table><h1 id="伸缩盒布局-flex" tabindex="-1">伸缩盒布局 Flex <a class="header-anchor" href="#伸缩盒布局-flex" aria-label="Permalink to &quot;伸缩盒布局 Flex&quot;">​</a></h1><p>布局的传统解决方案，基于<strong>盒状模型</strong>，依赖 <code>display</code> 属性 + <code>position</code> 属性 + <code>float</code> 属性。</p><p>2009年，W3C 提出了一种新的方案----Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。</p><p>Flex 是 Flexible Box 的缩写，意为&quot;伸缩盒模型&quot;或者&quot;弹性盒模型&quot;，用来为盒状模型提供最大的灵活性。</p><h3 id="伸缩容器和伸缩项目" tabindex="-1">伸缩容器和伸缩项目 <a class="header-anchor" href="#伸缩容器和伸缩项目" aria-label="Permalink to &quot;伸缩容器和伸缩项目&quot;">​</a></h3><h3 id="伸缩盒模型专业术语" tabindex="-1">伸缩盒模型专业术语 <a class="header-anchor" href="#伸缩盒模型专业术语" aria-label="Permalink to &quot;伸缩盒模型专业术语&quot;">​</a></h3><p><strong>主轴方向、侧轴方向：</strong> 默认主轴方向是水平的，侧轴方向是垂直的；如果设置主轴方向是垂直的，那么侧轴方向就是水平的。</p><p><strong>主轴</strong>：Flex 容器的主轴主要用来配置 Flex 项目；伸缩项目会沿主轴分布；他不一定是水平的，这主要取决于 <code>flex-direction</code> 属性。</p><p><strong>主轴起点，主轴终点</strong>：Flex 项目的配置从容器的主轴起点边开始，往主轴终点边结束。</p><p><strong>主轴长度</strong>：Flex 项目在主轴方向的宽度或高度就是项目的主轴长度，Flex 项目的主轴长度属性是 <code>width</code> 或 <code>height</code> 属性，由哪一个对着主轴方向决定。</p><p><strong>侧轴</strong>：与主轴垂直的轴称作侧轴，是侧轴方向的延伸。</p><p><strong>侧轴起点，侧轴终点</strong>：伸缩行的配置从容器的侧轴起点边开始，往侧轴终点边结束。</p><p><strong>侧轴长度</strong>：Flex 项目在侧轴方向的宽度或高度就是项目的侧轴长度，Flex 项目的侧轴长度属性是 <code>width</code> 或 <code>height</code> 属性，由哪一个对着主轴方向决定。</p><p><img src="https://2216847528.oss-cn-beijing.aliyuncs.com/asset/image-20240311111319081.png" alt="image-20240311111319081"></p><h4 id="_1-概念定义" tabindex="-1">① 概念定义 <a class="header-anchor" href="#_1-概念定义" aria-label="Permalink to &quot;① 概念定义&quot;">​</a></h4><p><strong>伸缩容器：</strong> 元素设置 <code>display:flex</code>或者<code>display:inline-flex</code>，该元素就称为伸缩容器 父元素的位置。</p><p><strong>伸缩项目：</strong> 伸缩容器的<strong>子元素</strong>称为伸缩项目。</p><h4 id="_2-伸缩项目的特点" tabindex="-1">② 伸缩项目的特点 <a class="header-anchor" href="#_2-伸缩项目的特点" aria-label="Permalink to &quot;② 伸缩项目的特点&quot;">​</a></h4><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 伸缩项目沿主轴排列（主轴默认横向），不会脱离文档流</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 不论元素原来的显示模式是什么，变为伸缩项目之后，具有自己的显示特点：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   ①</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 不存在外边距的塌陷和合并，默认宽高被内容撑开</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   ②</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 宽高内外边距都可以设置，不会被父元素当成文本</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="设置主轴方向和换行方式" tabindex="-1">设置主轴方向和换行方式 <a class="header-anchor" href="#设置主轴方向和换行方式" aria-label="Permalink to &quot;设置主轴方向和换行方式&quot;">​</a></h3><p><strong>主轴：</strong> 伸缩项目沿着主轴排列，主轴的默认方向是从左到右。</p><p><strong>侧轴：</strong> 与主轴垂直的是侧轴。</p><h4 id="_1-设置主轴方向" tabindex="-1">① 设置主轴方向 <a class="header-anchor" href="#_1-设置主轴方向" aria-label="Permalink to &quot;① 设置主轴方向&quot;">​</a></h4><p>给<code>伸缩容器</code>设置CSS属性 <code>flex-direction</code> 可以修改主轴方向，该属性的值如下：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">row				水平从左到右</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">row-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		水平从右到左</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">column			竖直从上到下</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">column-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	竖直从下到上</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h4 id="_2-设置换行方式" tabindex="-1">② 设置换行方式 <a class="header-anchor" href="#_2-设置换行方式" aria-label="Permalink to &quot;② 设置换行方式&quot;">​</a></h4><p>给<code>伸缩容器</code>设置CSS属性<code>flex-wrap</code> 可以修改换行方式，该属性值如下：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nowrap			不换行</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wrap			自动换行</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">wrap-reverse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	换行并翻转</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_3-同时设置主轴方向和换行方式" tabindex="-1">③ 同时设置主轴方向和换行方式 <a class="header-anchor" href="#_3-同时设置主轴方向和换行方式" aria-label="Permalink to &quot;③ 同时设置主轴方向和换行方式&quot;">​</a></h4><p><code>flex-flow</code> 可以同时设置主轴方向和换行方式，是 <code>flex-direction</code> 和 <code>flex-wrap</code> 的复合属性。</p><h2 id="设置伸缩项目在主轴上的对齐方式" tabindex="-1">设置伸缩项目在主轴上的对齐方式 <a class="header-anchor" href="#设置伸缩项目在主轴上的对齐方式" aria-label="Permalink to &quot;设置伸缩项目在主轴上的对齐方式&quot;">​</a></h2><p>给<code>伸缩容器</code>设置CSS属<code>justify-content</code>，可以调整伸缩项目在主轴上的对齐方式，该属性的值如下：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				主轴起点对齐，默认值</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				主轴终点对齐</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					居中对齐</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			两端对齐，两端无间距</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			两端对齐,两端间距是中间间距一半</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-evenly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			两端对齐,两端间距与中间间距相等</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="设置伸缩项目在侧轴上的对齐方式" tabindex="-1">设置伸缩项目在侧轴上的对齐方式 <a class="header-anchor" href="#设置伸缩项目在侧轴上的对齐方式" aria-label="Permalink to &quot;设置伸缩项目在侧轴上的对齐方式&quot;">​</a></h2><h3 id="_1-一条主轴线-伸缩项目在主轴上不换行" tabindex="-1">① 一条主轴线（伸缩项目在主轴上不换行） <a class="header-anchor" href="#_1-一条主轴线-伸缩项目在主轴上不换行" aria-label="Permalink to &quot;① 一条主轴线（伸缩项目在主轴上不换行）&quot;">​</a></h3><p>给伸缩容器设置CSS属性 <code>align-items</code>， 该属性的值如下：前提是需要在伸缩容器上设置高度或宽度，侧轴上需要有长度。</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stretch		伸缩项目在侧轴方向拉伸（前提：不设置侧轴方向对应的长度） 默认</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	侧轴起点 高度被内容撑开</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	侧轴终点 </span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		居中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">baseline	基线</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_2-多条主轴线-伸缩项目在主轴上发生换行" tabindex="-1">② 多条主轴线 （伸缩项目在主轴上发生换行） <a class="header-anchor" href="#_2-多条主轴线-伸缩项目在主轴上发生换行" aria-label="Permalink to &quot;② 多条主轴线 （伸缩项目在主轴上发生换行）&quot;">​</a></h3><p>给伸缩容器设置CSS属性 <code>align-content</code>， 该属性的值如下：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stretch					伸缩项目在侧轴方向拉伸,默认</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				侧轴起点对齐，默认值</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">				侧轴终点对齐</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">					居中对齐</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-between</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			两端对齐，两端无间距</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			两端间距是中间间距一半</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">space-evenly</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			两端间距与中间间距相等</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="伸缩项目在主轴的伸缩性" tabindex="-1">伸缩项目在主轴的伸缩性 <a class="header-anchor" href="#伸缩项目在主轴的伸缩性" aria-label="Permalink to &quot;伸缩项目在主轴的伸缩性&quot;">​</a></h2><h3 id="_1-伸缩项目在主轴上的长度-flex-basis" tabindex="-1">① 伸缩项目在主轴上的长度 flex-basis <a class="header-anchor" href="#_1-伸缩项目在主轴上的长度-flex-basis" aria-label="Permalink to &quot;① 伸缩项目在主轴上的长度 flex-basis&quot;">​</a></h3><p>如果设置了 flex-basis，伸缩项目在主轴上的长度就按照 flex-basis， 与主轴方向对应的 width 或者 height 将不生效。</p><p>flex-basis 的默认值是 auto，表示 flex-basis 不起作用，主轴方向的长度仍然按照 width 或者 height 的设置。</p><h3 id="_2-扩展比率-flex-grow-对应的伸" tabindex="-1">② 扩展比率 flex-grow 对应的伸 <a class="header-anchor" href="#_2-扩展比率-flex-grow-对应的伸" aria-label="Permalink to &quot;② 扩展比率 flex-grow 对应的伸&quot;">​</a></h3><p><strong>伸缩项目扩展的前提：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1. 伸缩容器在主轴方向有富余的空间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2. 伸缩项目的扩展比率flex-grow不能是0</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>伸缩项目扩展的规则：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			  原来的主轴长度  扩展比率    瓜分比重</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         100            1        1/10     100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">400</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1/10即100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">40</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         200            6        6/10     100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">400</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">6/10即200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">240</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         300            3        3/10     100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">400</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3/10即300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">120</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">富余空间： 400</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">分母： 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">6</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3=10</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_3-收缩比率-flex-shrink" tabindex="-1">③ 收缩比率 flex-shrink <a class="header-anchor" href="#_3-收缩比率-flex-shrink" aria-label="Permalink to &quot;③ 收缩比率 flex-shrink&quot;">​</a></h3><p><strong>伸缩项目收缩的前提：</strong></p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>1. 伸缩容器在主轴上的长度不够，小于所有伸缩项目的主轴长度和</span></span>
<span class="line"><span>2. 不能换行</span></span>
<span class="line"><span>3. 伸缩项目的收缩比率不能是0，默认值是 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>伸缩项目收缩的规则：</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">			原来的主轴长度    收缩比率    瓜分比重</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         100            5        500/1700     100-100</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">5/17</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item02</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         200            3        600/1700     200-100</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">6/17</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.item03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         300            2        600/1700     300-100</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">6/17</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">亏空长度： 100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">分母：    100</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">5 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 200</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 300</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2 = 1700</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_4-flex-复合属性" tabindex="-1">④ flex 复合属性 <a class="header-anchor" href="#_4-flex-复合属性" aria-label="Permalink to &quot;④ flex 复合属性&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: grow shrink basis</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">basis 为0 代表主轴上边的富裕空间是100%</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 1 1 0; 伸缩容器被伸缩项目瓜分掉</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 0 0 auto; 伸缩容器不伸长也不收缩</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flex: 0 1 auto;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>如果缩写为 <code>flex: 1</code> , 则其计算值为 <code>1 1 0%</code></li><li>如果缩写 <code>flex: auto</code> , 则其计算值为 <code>1 1 auto</code></li><li>如果<code>flex: none</code> , 则其计算值为<code>0 0 auto</code></li><li>如果 <code>flex: 0 auto</code> 或者 <code>flex: initial</code> , 则其计算值为<code>0 1 auto</code>，即 flex 初始值</li></ul><h2 id="伸缩项目排序" tabindex="-1">伸缩项目排序 <a class="header-anchor" href="#伸缩项目排序" aria-label="Permalink to &quot;伸缩项目排序&quot;">​</a></h2><p>给伸缩项目设置 <code>order</code> 属性，属性值是数字，值越大排序越靠后，可以是负值。</p><h2 id="单独设置伸缩项目在侧轴上的对齐方式" tabindex="-1">单独设置伸缩项目在侧轴上的对齐方式 <a class="header-anchor" href="#单独设置伸缩项目在侧轴上的对齐方式" aria-label="Permalink to &quot;单独设置伸缩项目在侧轴上的对齐方式&quot;">​</a></h2><p>给伸缩项目设置 <code>align-self</code> ，该属性的值：</p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">auto： 	   按照伸缩容器 </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 的设置,默认值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stretch		伸缩项目在侧轴方向拉伸</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	侧轴起点</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">flex-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	侧轴终点</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		居中</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">baseline	基线</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="伸缩盒相关-css-属性总结" tabindex="-1">伸缩盒相关 CSS 属性总结 <a class="header-anchor" href="#伸缩盒相关-css-属性总结" aria-label="Permalink to &quot;伸缩盒相关 CSS 属性总结&quot;">​</a></h2><h3 id="_1-设置给伸缩容器的属性" tabindex="-1">① 设置给伸缩容器的属性 <a class="header-anchor" href="#_1-设置给伸缩容器的属性" aria-label="Permalink to &quot;① 设置给伸缩容器的属性&quot;">​</a></h3><table><thead><tr><th>CSS 属性名</th><th>含义</th><th>值</th></tr></thead><tbody><tr><td>display</td><td>设置伸缩容器</td><td>flex<br>inline-flex</td></tr><tr><td>flex-direction</td><td>主轴方向</td><td>row<br>row-reverse<br>column<br>column-reverse</td></tr><tr><td>flex-wrap</td><td>换行方式</td><td>nowrap<br>wrap<br>wrap-reverse</td></tr><tr><td>flex-flow</td><td>同时设置主轴方向和换行方式</td><td></td></tr><tr><td>justify-content</td><td>主轴上的对齐方式</td><td>flex-start<br>flex-end<br>center<br>space-between<br>space-around<br>space-evenly</td></tr><tr><td>align-items</td><td>侧轴上的对齐方式</td><td>stretch<br>flex-start<br>flex-end<br>center<br>baseline</td></tr><tr><td>align-content</td><td>侧轴上的对齐方式（发生换行）</td><td>stretch<br>flex-start<br>flex-end<br>center<br>space-between<br>space-around<br>space-evenly</td></tr></tbody></table><h3 id="_2-设置给伸缩项目的属性" tabindex="-1">② 设置给伸缩项目的属性 <a class="header-anchor" href="#_2-设置给伸缩项目的属性" aria-label="Permalink to &quot;② 设置给伸缩项目的属性&quot;">​</a></h3><table><thead><tr><th>CSS 属性名</th><th>含义</th><th>值</th></tr></thead><tbody><tr><td>flex-basis</td><td>伸缩项目的主轴长度</td><td>auto，长度</td></tr><tr><td>flex-grow</td><td>扩展比率</td><td>数字，默认值0</td></tr><tr><td>flex-shrink</td><td>收缩比率</td><td>数字，默认值1</td></tr><tr><td>flex</td><td>复合属性</td><td></td></tr><tr><td>order</td><td>排序</td><td>数字</td></tr><tr><td>align-self</td><td>单独设置侧轴对齐</td><td></td></tr></tbody></table><p>定位元素 天下第一，权重最高，脱离文档流</p><p>浮动不如伸缩项目，</p>`,78),l=[t];function p(r,h,d,c,k,o){return i(),a("div",null,l)}const u=s(e,[["render",p]]);export{E as __pageData,u as default};
