import{_ as a,c as e,o,a5 as t}from"./chunks/framework.DXx0hzU1.js";const b=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/01-HTML5CSS3/13-CSS元素居中&行内块空白.md","filePath":"front-end/01-HTML5CSS3/13-CSS元素居中&行内块空白.md"}'),r={name:"front-end/01-HTML5CSS3/13-CSS元素居中&行内块空白.md"},l=t('<h2 id="元素居中总结" tabindex="-1">元素居中总结 <a class="header-anchor" href="#元素居中总结" aria-label="Permalink to &quot;元素居中总结&quot;">​</a></h2><h3 id="行内元素或行内块元素" tabindex="-1">行内元素或行内块元素 <a class="header-anchor" href="#行内元素或行内块元素" aria-label="Permalink to &quot;行内元素或行内块元素&quot;">​</a></h3><p>让行内元素或行内块元素进行居中，需要对其父元素设置文本对齐方式，因为行内元素或行内块元素可以被当做文本处理。</p><p>让行内元素或行内块元素<strong>水平居中对齐</strong>，在其父元素上设置 <code>text-align:center</code>。</p><p>让行内元素或行内块元素<strong>垂直居中对齐</strong>，在其父元素上设置 <code>line-height</code> 属性，行高的值与高度相等即可。</p><h3 id="块级元素" tabindex="-1">块级元素 <a class="header-anchor" href="#块级元素" aria-label="Permalink to &quot;块级元素&quot;">​</a></h3><h4 id="_1-水平居中对齐" tabindex="-1">① 水平居中对齐 <a class="header-anchor" href="#_1-水平居中对齐" aria-label="Permalink to &quot;① 水平居中对齐&quot;">​</a></h4><p>设置元素的左外边距和右外边距的值都为 <code>auto</code>。</p><blockquote><p><strong>注意：</strong></p><p>让块级元素居中，是对元素本身进行设置。</p><p>浮动的元素以及绝对定位和相对定位的元素不能使用该方法进行居中。</p></blockquote><h4 id="_2-水平方向和垂直方向都居中对齐" tabindex="-1">② 水平方向和垂直方向都居中对齐 <a class="header-anchor" href="#_2-水平方向和垂直方向都居中对齐" aria-label="Permalink to &quot;② 水平方向和垂直方向都居中对齐&quot;">​</a></h4><p>要实现一个块级元素在父元素里面垂直居中对齐，需要对改元素设置定位；这种方式可以设置元素垂直居中，可以设置元素水平居中。</p><p><strong>定位的元素水平居中：</strong> 设置 <code>left:50%</code>，设置 <code>margin-left</code> 为负的宽度的一半。</p><p><strong>定位的元素垂直居中：</strong> 设置<code>top:50%</code>，设置 <code>margin-top</code> 为负的高度的一半。</p><h2 id="行内元素和行内块元素的空白" tabindex="-1">行内元素和行内块元素的空白 <a class="header-anchor" href="#行内元素和行内块元素的空白" aria-label="Permalink to &quot;行内元素和行内块元素的空白&quot;">​</a></h2><h3 id="元素之间的空白" tabindex="-1">元素之间的空白 <a class="header-anchor" href="#元素之间的空白" aria-label="Permalink to &quot;元素之间的空白&quot;">​</a></h3><h4 id="_1-产生的原因" tabindex="-1">① 产生的原因 <a class="header-anchor" href="#_1-产生的原因" aria-label="Permalink to &quot;① 产生的原因&quot;">​</a></h4><p>书写 html 代码的时候，每写一个元素都会换行，这个换行符号会被浏览器解析成空格，空格的大小根据字体大小的设置来计算。</p><p>块级元素没有这个问题，因为行内块和行内元素会被当做文本处理。</p><h4 id="_2-解决方案" tabindex="-1">② 解决方案： <a class="header-anchor" href="#_2-解决方案" aria-label="Permalink to &quot;② 解决方案：&quot;">​</a></h4><ul><li>方案一： 元素和元素之间不写换行（不建议）</li><li>方案二：给父元素设置 <code>font-size:0</code>,这样空格就不显示；再给具体的行内元素或行内块元素设置字体大小。</li></ul><h3 id="图片-行内块元素-底部幽灵空白" tabindex="-1">图片（行内块元素）底部幽灵空白 <a class="header-anchor" href="#图片-行内块元素-底部幽灵空白" aria-label="Permalink to &quot;图片（行内块元素）底部幽灵空白&quot;">​</a></h3><h4 id="_1-产生的原因-1" tabindex="-1">① 产生的原因 <a class="header-anchor" href="#_1-产生的原因-1" aria-label="Permalink to &quot;① 产生的原因&quot;">​</a></h4><p>图片（行内块元素）会按照基线对齐，基线和底线之间有间距，这个间距就是<strong>幽灵空白</strong>。</p><blockquote><p><strong>注意：</strong></p><p>一般行内块元素如果里面没有文本内容的话会出现跟图片相同的效果；但是如果里面有文本内容，里面的文字会以基线对齐，行内块元素就不存在底部的空白了。</p></blockquote><h4 id="_2-解决方案-1" tabindex="-1">② 解决方案 <a class="header-anchor" href="#_2-解决方案-1" aria-label="Permalink to &quot;② 解决方案&quot;">​</a></h4><ul><li>方案一：设置图片（行内块元素）为块级元素（常用，但是如果一行内要显示多个图片（行内块），就不合适了）。</li><li>方案二：设置图片（行内块元素）的基线对齐方式，<code>vertical-align:bottom</code>,值不是 <code>baseline</code>。</li><li>方案三：给图片（行内块元素）的父元素设置 <code>font-size:0</code>。</li></ul>',26),n=[l];function i(d,c,h,s,_,p){return o(),e("div",null,n)}const q=a(r,[["render",i]]);export{b as __pageData,q as default};
